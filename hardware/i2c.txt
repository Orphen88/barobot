----------------------------------------------------------------------

WOZEK -> MAINBOARD

Slave2main2Android	0x44	address	byte1 byte1 byte1


ANALOG				0x34	majorbyte	minorbyte
HALLEVENT			0x35	majorbyte	minorbyte	state
ENDSTOP				0x36	majorbyte	minorbyte	state


----------------------------------------------------------------------
IPANEL -> MAINBOARD (over TWI)

HALL:

local_max( hall, max_value )
global_max( hall, max_value )



									
----------------------------------------------------------------------
Silnik

0x13	0x01 	void disableOutputs()
0x13	0x02 	void enableOutputs()

0x13	0x03 	void moveTo(int32)				//long
0x13	0x04 	void stopNow( boolean disableoutput = false );
0x13	0x05 	void setAcceleration(int32 acceleration)		// float
0x13	0x06 	void setMaxSpeed(int32 speed);
0x13	0x07 	void void stop( int32 multispeed );

0x13	0x11 	int32 currentPosition()			//long
0x13	0x12 	int32 distanceToGo()			//long
0x1E			void changeAddress( byte new_addr )		// Zmień adres I2c, musi być podane co najmniej 4 razy zeby zadziałało. (2 bajty)
					
		


		
Opisy:

0x14	Ustaw kierunek dla PINU o numerze ( 3 bajty )
					0x14	0		1			// OUT
					0x14	5		2			// IN
					0x14	11		0			// nie ustawione

0x15	Wpisz cyfrowo PIN o numerze	 ( 3 bajty )
					0x15	0x00		1
					0x15	0x05		0
					0x15	0x0B		1

0x26	Pobierz anlalogowo PIN o numerze ( 2 bajty )
					0x16	0x02
					0x16	0x03
			return 2 bytes:
					A - bit adresu pina (3 bity = 8 adresow)
					V - bit wartości
					AAA000VV	VVVVVVVV
					00000011	11111111	// Wynik 1024 na pinie 0
					00100011	11111111	// Wynik 1024 na pinie 1
					11100011	11111111	// Wynik 1024 na pinie 7

					buffer[0]	= pin + 2 starsze bity wyniku
					buffer[1]	= 8 młodszych bitów wyniku

0x28	Pobierz cyfrowo PIN o numerze ( 2 bajty )
					0x18	0
					0x18	5
					0x18	11
					0x18	11
			return 1 byte:
					0xFF		// wynik HIGH
					0x00		// wynik LOW

					buffer[0]	= pin
					buffer[1]	= wartosc
					
0x29	Wypisz rodzaj urządzenia i wersję softu
			return 2 bytes:
					byte1	byte2		// byte1 - typ urządzenia, byte2 - wersja
					0x01	0x02		// 0x01 = SLAVE / U-panel, 0x02 = versja 2
					0x12	0x03		// 0x12 = MASTER / MainBoard, 0x02 = versja 3
					0x02	0x04		// 0x03 = SLAVE / Carret, 0x02 = versja 4

					buffer[0]	= typ
					buffer[1]	= wersja





U-panel



avrdude -P COM7 -c arduino -p atmega8 -v -v -v -v -v -i 100 -b 38400
		
		
		
		
		
		
		
Kody błedów:

0x10	I2C HANGS
0x11	WATCHDOG ALERT
0x12	DONT UNDERSTAND
0x14	INPUT OUT OF RANGE
0x15	SENSOR VALUE OUT OD RANGE 
0x16	SENSOR DISCONNECTED
0x17	MOVE ERROR
0x18	STOP EVERYTHING
0x19
0x1A
0x1B
0x1C





		avrdude -P COM40 -c stk500v1 -p m328p -v -v -v -v -v -i 100 -b 57600



cat /sdcard/android.hardware.usb.host.xml > /system/etc/permissions/android.hardware.usb.host.xml






https://libusb.org/wiki/libusb-1.0

http://android.serverbox.ch/?p=151

http://www.recursion.jp/avrcdc/
http://www.fourwalledcubicle.com/LUFA.php
micropendous 
https://instruct1.cit.cornell.edu/courses/ee476/FinalProjects/s2007/blh36_cdl28_dct23/blh36_cdl28_dct23/index.html

http://www.cesko.host.sk/IgorPlugUSB/IgorPlug-USB%20%28AVR%29_eng.htm
http://dicks.home.xs4all.nl/avr/usbtiny/

http://android.serverbox.ch/?p=370






Kolor






LIVE A 0,10,1

LIVE A 0,5,10

LIVE A OFF




